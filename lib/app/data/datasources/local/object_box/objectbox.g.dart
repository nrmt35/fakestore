// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../../../../../app/data/datasources/local/object_box/login/login_local.dart';
import '../../../../../app/data/datasources/local/object_box/product/product_local.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 1244770175482222116),
      name: 'LoginLocal',
      lastPropertyId: const obx_int.IdUid(2, 6584716723719976648),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8616632308529150502),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6584716723719976648),
            name: 'token',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 6470717924531131534),
      name: 'ProductLocal',
      lastPropertyId: const obx_int.IdUid(9, 2667488122015272078),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4266763140735793655),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4763910261689810588),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2704882996698022328),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5873644410823345672),
            name: 'category',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5086945219088154399),
            name: 'image',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4862092757120280557),
            name: 'rate',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3502138127635776022),
            name: 'count',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7203317455425530443),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 2667488122015272078),
            name: 'productId',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(6, 6470717924531131534),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        7803589955134064119,
        5857704339448242384,
        5883907705696937864,
        1913527532052157229
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        2509431073148417424,
        114122592708262157,
        4907221315081684633,
        8646426534604258039,
        1755453347155707694,
        8000022256284089004,
        4595190098784872398,
        6018736576418579336,
        4248330132203392647,
        8143741652702428826,
        7629519615500795228,
        2944617639190915156,
        8124311477644686483,
        5122838378426707904,
        635531295635670366,
        1663597934742874057,
        6852712875180015754
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    LoginLocal: obx_int.EntityDefinition<LoginLocal>(
        model: _entities[0],
        toOneRelations: (LoginLocal object) => [],
        toManyRelations: (LoginLocal object) => {},
        getId: (LoginLocal object) => object.id,
        setId: (LoginLocal object, int id) {
          object.id = id;
        },
        objectToFB: (LoginLocal object, fb.Builder fbb) {
          final tokenOffset = fbb.writeString(object.token);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tokenOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final tokenParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = LoginLocal(token: tokenParam, id: idParam);

          return object;
        }),
    ProductLocal: obx_int.EntityDefinition<ProductLocal>(
        model: _entities[1],
        toOneRelations: (ProductLocal object) => [],
        toManyRelations: (ProductLocal object) => {},
        getId: (ProductLocal object) => object.id,
        setId: (ProductLocal object, int id) {
          object.id = id;
        },
        objectToFB: (ProductLocal object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final descriptionOffset = fbb.writeString(object.description);
          final categoryOffset = fbb.writeString(object.category);
          final imageOffset = fbb.writeString(object.image);
          fbb.startTable(10);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, descriptionOffset);
          fbb.addOffset(3, categoryOffset);
          fbb.addOffset(4, imageOffset);
          fbb.addFloat64(5, object.rate);
          fbb.addInt64(6, object.count);
          fbb.addFloat64(7, object.price);
          fbb.addInt64(8, object.productId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final productIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final priceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final categoryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final imageParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final rateParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final countParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = ProductLocal(
              productId: productIdParam,
              title: titleParam,
              price: priceParam,
              description: descriptionParam,
              category: categoryParam,
              image: imageParam,
              rate: rateParam,
              count: countParam,
              id: idParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [LoginLocal] entity fields to define ObjectBox queries.
class LoginLocal_ {
  /// See [LoginLocal.id].
  static final id =
      obx.QueryIntegerProperty<LoginLocal>(_entities[0].properties[0]);

  /// See [LoginLocal.token].
  static final token =
      obx.QueryStringProperty<LoginLocal>(_entities[0].properties[1]);
}

/// [ProductLocal] entity fields to define ObjectBox queries.
class ProductLocal_ {
  /// See [ProductLocal.id].
  static final id =
      obx.QueryIntegerProperty<ProductLocal>(_entities[1].properties[0]);

  /// See [ProductLocal.title].
  static final title =
      obx.QueryStringProperty<ProductLocal>(_entities[1].properties[1]);

  /// See [ProductLocal.description].
  static final description =
      obx.QueryStringProperty<ProductLocal>(_entities[1].properties[2]);

  /// See [ProductLocal.category].
  static final category =
      obx.QueryStringProperty<ProductLocal>(_entities[1].properties[3]);

  /// See [ProductLocal.image].
  static final image =
      obx.QueryStringProperty<ProductLocal>(_entities[1].properties[4]);

  /// See [ProductLocal.rate].
  static final rate =
      obx.QueryDoubleProperty<ProductLocal>(_entities[1].properties[5]);

  /// See [ProductLocal.count].
  static final count =
      obx.QueryIntegerProperty<ProductLocal>(_entities[1].properties[6]);

  /// See [ProductLocal.price].
  static final price =
      obx.QueryDoubleProperty<ProductLocal>(_entities[1].properties[7]);

  /// See [ProductLocal.productId].
  static final productId =
      obx.QueryIntegerProperty<ProductLocal>(_entities[1].properties[8]);
}
